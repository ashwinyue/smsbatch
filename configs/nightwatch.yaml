# Copyright 2024 孔令飞 <colin404@foxmail.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file. The original repo for
# this file is https://github.com/onexstack/miniblog. The professional
# version of this repository is https://github.com/onexstack/onex.

# Nightwatch 服务配置文件
#

# 服务器类型，可选值有：
#   grpc：启动一个 gRPC 服务器
#   grpc-gateway: 启动一个 gRPC 服务器 + HTTP 反向代理服务器
#   gin：基于 gin 框架启动一个 HTTP 服务器
# 服务器模式选择：
#   - 应用内调用选择 grpc
#   - 如果有外部服务调用选择 grpc-gateway
#   - 学习 Gin 框架时选择 gin
server-mode: grpc-gateway

# JWT 配置已移除 - nightwatch 服务不再需要认证

# 指示是否启用内存数据库（用于测试或开发环境）.
# 如果设置为 true 则忽略 mysql 配置.
# 设置为 false 以使用 MySQL 数据库
enable-memory-store: false

# 是否启用watcher服务进行任务监控和处理
enable-watcher: true

# 用户watcher的最大工作线程数
user-watcher-max-workers: 10

# 安全服务器相关配置
tls:
  # 是否启动 HTTPS 安全服务器
  # 生产环境建议开启 HTTPS。并使用 HTTPS 协议访问 API 接口
  # 开发环境可以设置为 false 使用 HTTP
  use-tls: false
  # 证书
  cert: /opt/nightwatch/etc/cert/server.crt
  # 证书 Key 文件
  key: /opt/nightwatch/etc/cert/server.key

# HTTP 服务器相关配置
http:
  # HTTP 服务器监听地址
  addr: :7771

# GRPC 服务器相关配置
grpc:
  # GRPC 服务器监听地址
  addr: :8885

# MySQL 数据库相关配置
mysql:
  # MySQL 机器 IP 和端口，默认 127.0.0.1:3306
  addr: 127.0.0.1:3306
  # MySQL 用户名(建议授权最小权限集)
  username: miniblog
  # MySQL 用户密码
  password: miniblog1234
  # nightwatch 系统所用的数据库名
  database: miniblog
  # MySQL 最大空闲连接数，默认 100
  max-idle-connections: 100
  # MySQL 最大打开的连接数，默认 100
  max-open-connections: 100
  # 空闲连接最大存活时间，默认 10s
  max-connection-life-time: 10s
  # GORM 日志级别, 1: silent, 2:error, 3:warn, 4:info
  # 生产环境建议设置为 4
  log-level: 4

# Watcher 服务相关配置
watch:
  # 分布式锁配置
  distlock:
    # 分布式锁类型，支持: memory, redis, etcd, consul, zookeeper
    type: memory
    # 锁的默认过期时间
    expiry: 30s
    # 锁的重试间隔
    retry-delay: 100ms
    # 锁的最大重试次数
    max-retries: 3
  
  # 任务调度配置
  scheduler:
    # 调度器类型，支持: memory, redis
    type: memory
    # 任务扫描间隔
    scan-interval: 5s
    # 任务超时时间
    timeout: 300s
  
  # 工作池配置
  worker-pool:
    # 默认工作线程数
    default-workers: 5
    # 最大工作线程数
    max-workers: 20
    # 工作线程空闲超时时间
    idle-timeout: 60s

# Redis 配置
redis:
  # Redis 服务器地址
  addr: 127.0.0.1:6379
  # Redis 用户名
  username: ""
  # Redis 密码
  password: ""
  # Redis 数据库编号
  database: 1
  # 最大重试次数
  max-retries: 3
  # 最小空闲连接数
  min-idle-conns: 0
  # 连接超时时间
  dial-timeout: 5s
  # 读取超时时间
  read-timeout: 3s
  # 写入超时时间
  write-timeout: 3s
  # 连接池超时时间
  pool-timeout: 4s
  # 连接池大小
  pool-size: 10
  # 是否启用链路追踪
  enable-trace: false

# Kafka 配置
kafka:
  # Kafka 集群地址
  brokers: ["127.0.0.1:9092"]
  # 默认主题
  topic: "dcp-nightwatch"
  # 客户端ID
  client-id: "dcp-nightwatch"
  # 连接超时时间
  timeout: 3s
  # SASL 认证机制 (可选值: plain, scram-sha-256, scram-sha-512)
  mechanism: ""
  # SASL 用户名
  username: ""
  # SASL 密码
  password: ""
  # 压缩算法 (可选值: none, gzip, snappy, lz4, zstd)
  algorithm: ""
  # 是否启用压缩
  compressed: false
  # TLS 配置
  tls:
    use-tls: false
    cert: ""
    key: ""
    ca: ""
    insecure-skip-verify: false
  # 生产者配置
  writer:
    # 最大重试次数
    max-attempts: 10
    # 需要的确认数 (-1: 等待所有副本确认, 0: 不等待确认, 1: 等待leader确认)
    required-acks: 1
    # 是否异步发送
    async: true
    # 批次大小
    batch-size: 100
    # 批次超时时间
    batch-timeout: 1s
    # 批次字节数
    batch-bytes: 1048576
  # 消费者配置
  reader:
    # 消费者组ID
    group-id: "dcp-nightwatch-group"
    # 分区号 (与group-id互斥)
    partition: 0
    # 队列容量
    queue-capacity: 100
    # 最小字节数
    min-bytes: 1
    # 最大字节数
    max-bytes: 1048576
    # 最大等待时间
    max-wait: 10s
    # 读取批次超时时间
    read-batch-timeout: 10s
    # 心跳间隔
    heartbeat-interval: 3s
    # 提交间隔
    commit-interval: 0s
    # 重平衡超时时间
    rebalance-timeout: 30s
    # 起始偏移量 (-1: 最新, -2: 最早)
    start-offset: -1
    # 最大重试次数
    max-attempts: 3

# 日志配置
log:
  # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件和行号
  disable-caller: false
  # 是否禁止在 panic 及以上级别打印堆栈信息
  disable-stacktrace: false
  # 指定日志级别，可选值：debug, info, warn, error, dpanic, panic, fatal
  # 生产环境建议设置为 info
  level: debug
  # 指定日志显示格式，可选值：console, json
  # 生产环境建议设置为 json
  format: json
  # 指定日志输出位置，多个输出，用 `逗号 + 空格` 分开。stdout：标准输出
  output-paths: [stdout]