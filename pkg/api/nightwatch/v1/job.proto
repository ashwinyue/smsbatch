syntax = "proto3";

package nightwatch.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/ashwinyue/dcp/pkg/api/nightwatch/v1;v1";

message Job {
    // Job 名称
    string name = 1;
    // Job ID
    string jobID = 2;
    // 创建人
    string userID = 3;
    // CronJob ID
    string cronJobID = 4;
    // Job 作用域
    string scope = 5;
    // Job 描述
    string description = 6;
    string watcher  = 7;
    // Job 参数
    JobParams params = 8;
    // Job 执行结果
    JobResults results  = 9;
    // Job 状态：Pending、Running、Succeeded、Failed
    string status = 10;
    // Job 状态：Pending、Running、Succeeded、Failed
    repeated JobCondition conditions  = 11;
    // Job 开始时间
    int64 startedAt  = 12;
    // Job 结束时间
    int64 endedAt  = 13;
    // 创建时间
    google.protobuf.Timestamp createdAt = 14;
    // 更新时间
    google.protobuf.Timestamp updatedAt = 15;
}

message JobParams{
  TrainParams train = 1;
  MessageBatchParams messageBatch = 2;
}

message TrainParams {
  int64 idempotentExecution = 1;
  int64 jobTimeout  = 2;
  int64 batchSize = 3;
}

message MessageBatchParams {
  int64 idempotentExecution = 1;
  int64 jobTimeout = 2;
  int64 batchSize = 3;
  int64 partitionCount = 4;
  int64 maxRetries = 5;
  string sourceType = 6;
  string targetType = 7;
  repeated string recipients = 8;
  string template = 9;
  string messageType = 10;
  int64 concurrency = 11;
}

message JobResults{
  TrainResults train = 1;
  BatchResults batch = 2;
  MessageBatchResults messageBatch = 3;
}

message BatchResults {
  optional string taskID = 1;
  optional string progressPath = 2;
  optional string resultPath = 3;
  optional int64 processed = 4;
  optional int64 total = 5;
  optional float percent = 6;
}

message MessageBatchResults {
  optional string batchID = 1;
  optional MessageBatchPhaseStats preparationStats = 2;
  optional MessageBatchPhaseStats deliveryStats = 3;
  optional int64 totalMessages = 4;
  optional int64 processedMessages = 5;
  optional int64 successMessages = 6;
  optional int64 failedMessages = 7;
  optional float progressPercent = 8;
  optional string currentPhase = 9;
  optional string currentState = 10;
  repeated MessageBatchPartitionStatus partitionStatuses = 11;
  optional string errorMessage = 12;
  optional int64 retryCount = 13;
}

message MessageBatchPhaseStats {
  optional int64 total = 1;
  optional int64 processed = 2;
  optional int64 success = 3;
  optional int64 failed = 4;
  optional float percent = 5;
  optional int64 startTime = 6;
  optional int64 endTime = 7;
  optional int64 durationSeconds = 8;
  optional int64 retryCount = 9;
  optional int64 partitions = 10;
}

message MessageBatchPartitionStatus {
  int32 partitionID = 1;
  string status = 2;
  int64 processedCount = 3;
  int64 failedCount = 4;
  optional int64 startTime = 5;
  optional int64 endTime = 6;
  optional string errorMessage = 7;
  int32 retryCount = 8;
}

message TrainResults {
  optional string embeddedDataPath = 1;
  optional string taskID= 2;
  optional string dataPath = 4;
  optional string resultPath = 3;
}

message JobCondition {
  // Type of the condition (e.g., "Downloaed", "Embedded", "Evaluated")
  string type = 1;
  // Status of the condition (True, False, Unknown)
  string status = 2;
  // Message provides additional information when the condition is false
  string message = 3;
  // Last time the condition transitioned from one status to another.
  string lastTransitionTime = 4;
}

message CreateJobRequest{
  Job job = 1;
}

message CreateJobResponse{
  string jobID = 1;
}

message UpdateJobRequest{
  string jobID = 1;
  optional string name = 2;
  optional string description = 3;
  optional JobParams params = 4;
  optional JobResults results  = 5;
  optional string status = 6;
}

message UpdateJobResponse{
}

message DeleteJobRequest{
  repeated string jobIDs = 1;
}

message DeleteJobResponse{
}

message GetJobRequest{
  // @gotags: uri:"jobID"
  string jobID = 1;
}

message GetJobResponse{
  Job job = 1;
}

message ListJobRequest{
  // @gotags: form:"offset"
  int32 offset = 1;
  // @gotags: form:"limit"
  int32 limit = 2;
}

message ListJobResponse{
  int64 total = 1;
  repeated Job jobs = 2;
}

